name: Build and publish Docker image

on:
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag `vX.Y.Z` to build a Docker image for.'
        required: true

env:
  IMAGE_NAME: jgosmann/gen-semver-tags

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Set version from ref
        id: version
        run: REF=${{ inputs.version || github.event.release.tag_name }}; TAG=${REF#refs/*/}; echo "version=${TAG#v}" >> $GITHUB_OUTPUT

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.version || github.event.release.tag_name }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Get tags for Docker image
        id: image-tags
        shell: bash
        run: |
          echo 'TAGS<<EOF' >> "$GITHUB_OUTPUT"
          curl  --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" --header "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/jgosmann/gen-semver-tags/releases \
          | jq --raw-output '.[]["tag_name"] | sub("^v"; "")' \
          | docker run --rm jgosmann/gen-semver-tags:0.1 ${{ steps.version.outputs.version }} \
          | awk '{print "${{ env.IMAGE_NAME }}:"$0}' \
          >> "$GITHUB_OUTPUT"
          echo 'EOF' >> "$GITHUB_OUTPUT"

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.image-tags.outputs.TAGS }}
          platforms: linux/amd64,linux/arm64
          labels: ${{ steps.meta.outputs.labels }}